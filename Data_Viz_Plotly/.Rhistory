library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
plot(cars)
install.packages("ggplot2")
install.packages("ggplot2")
ggplot2
install.packages("ggplot2")
library(ggplot2)
install.packages("plotly")
library(plotly)
```{r}
data <- read.csv(file = "2018-2019.csv")
data
head(data)
# Bibliotheken importieren
library("plotly")
library("plyr")
library("dplyr")
# List files in Data folder
files <- list.files(path="./Data/", pattern=NULL, all.files=FALSE, full.names=TRUE)
# Create DataFrame with all csv
df <- ldply(.data = files, .fun = read.csv)
# View entire DataFrame in R Studio
View(df)
# Bibliotheken importieren
library("plotly")
library("plyr")
library("dplyr")
# List files in Data folder
files <- list.files(path="./Data/", pattern=NULL, all.files=FALSE, full.names=TRUE)
# Create DataFrame with all csv
df <- ldply(.data = files, .fun = read.csv)
# View entire DataFrame in R Studio
View(df)
# Bibliotheken importieren
library("plotly")
library("plyr")
library("dplyr")
# List files in Data folder
files <- list.files(path="./Data/", pattern=NULL, all.files=FALSE, full.names=TRUE)
# Create DataFrame with all csv
df <- ldply(.data = files, .fun = read.csv)
# View entire DataFrame in R Studio
View(df)
# Bibliotheken importieren
library("plotly")
library("plyr")
library("dplyr")
# List files in Data folder
files <- list.files(path="./Data/", pattern=NULL, all.files=FALSE, full.names=TRUE)
# Create DataFrame with all csv
df <- ldply(.data = files, .fun = read.csv)
# View entire DataFrame in R Studio
View(df)
# View entire DataFrame in R Studio
#View(df)
print(unique(df))
df %>% group_by(Referee) %>% summarize(count=n()
df %>% group_by(Referee) %>% summarize(count=n())
group_by_referee <- aggregate(x = df$Referee)
group_by_referee <- aggregate(
x = df$Referee,
FUN = function(x) length(unique(x)))
group_by_referee <- aggregate(
x = df$Referee,
by = list(df$Referee)
FUN = function(x) length(unique(x)))
group_by_referee <- aggregate(
x = df$Referee,
by = list(df$Referee),
FUN = function(x) length(unique(x)))
group_by_referee
